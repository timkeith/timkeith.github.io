{"version":3,"sources":["components/DeckPicker.jsx","components/Util.js","components/ScoreTable.jsx","components/Flashcard.jsx","data/words.js","components/Flashcards.jsx","components/App.jsx","index.js"],"names":["Checkbox","_ref","label","isChecked","onChange","React","createElement","className","type","name","checked","DeckPicker","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","handleSelectAll","decks","deck","state","setState","handleBegin","doBegin","getSelected","reverseQAndA","words","_inherits","_createClass","key","value","_this2","selected","_this3","result","push","_this4","id","Button","variant","onClick","handleSelectDeselectAll","Object","entries","map","x","handleChange","disabled","areAnyChecked","Component","Util","MAX_SCORE","pickFromBuckets","buckets","sum","weights","list","i","weight","length","Math","pow","r","random","index","reduce","undefined","p","bucket","floor","concat","moveBucket","from","to","_toConsumableArray","fi","indexOf","splice","console","error","ScoreTable","scores","questions","rows","Array","s","overall","max","ProgressBar","now","reverse","row","word","j","Flashcard","_getPrototypeOf2","_len","arguments","args","_key","apply","showAnswer","doEvaluation","v","_this$props","question","answer","hidden","delta","title","e","Words","Avere","Fare","Andare","Essere","Volere","Potere","Dovere","Preposizioni","Numeri","Questions","Verbs: -are","Verbs: -ere","Verbs: -ire","START_SCORE","Flashcards","oldScore","currentWord","newScore","min","d1","d2","answers","haveBegun","Fragment","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d2ade48.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nconst Checkbox = ({ label, isChecked, onChange }) => (\n  <div className='Checkbox'>\n    <label>\n      <input\n        type='checkbox'\n        name={label}\n        checked={isChecked}\n        onChange={onChange}\n      />\n      {label}\n    </label>\n  </div>\n);\n\nclass DeckPicker extends Component {\n\n  constructor(props) {\n    super(props);\n    var decks = {};\n    for (const deck in props.words) {\n      decks[deck] = false;\n    }\n    this.state = {\n      decks: decks,\n      reverseQAndA: false,\n    };\n  }\n\n  handleChange(key) {\n    return () => {\n      var decks = this.state.decks;\n      decks[key] = !decks[key];\n      this.setState({ decks: decks });\n    }\n  }\n\n  handleSelectAll = () => {\n    var decks = {};\n    for (const deck in this.state.decks) {\n      decks[deck] = true;\n    }\n    this.setState({ decks: decks });\n  }\n\n  handleSelectDeselectAll(selected) {\n    return () => {\n      var decks = {};\n      for (const deck in this.state.decks) {\n        decks[deck] = selected;\n      }\n      this.setState({ decks: decks });\n    };\n  }\n\n  areAnyChecked() {\n    for (const deck in this.state.decks) {\n      if (this.state.decks[deck]) return true;\n    }\n    return false;\n  }\n\n  getSelected() {\n    var result = [];\n    for (const deck in this.state.decks) {\n      if (this.state.decks[deck]) result.push(deck);\n    }\n    return result;\n  }\n\n  handleBegin = () => {\n    this.props.doBegin(this.getSelected(), this.state.reverseQAndA);\n  };\n\n  render() {\n    return (\n      <div id='DeckPicker'>\n        <h1>Choose Decks to Study</h1>\n        <Button\n          variant='primary'\n          onClick={this.handleSelectDeselectAll(true)}>\n          Select All\n        </Button>\n        <Button\n          variant='primary'\n          onClick={this.handleSelectDeselectAll(false)}>\n          Deselect All\n        </Button>\n        {\n          Object.entries(this.state.decks).map((x) => (\n            <Checkbox\n              label={x[0]}\n              key={x[0]}\n              isChecked={x[1]}\n              onChange={this.handleChange(x[0])}\n            />\n          ))\n        }\n        <Button\n          variant='primary'\n          disabled={!this.areAnyChecked()}\n          onClick={this.handleBegin}>\n          Begin\n        </Button>\n        <label className='reverse-checkbox'>\n          <input\n            type='checkbox'\n            name='reverse'\n            checked={this.state.reverseQAndA}\n            onChange={() => { this.setState({ reverseQAndA: !this.state.reverseQAndA}) }}\n          />\n          Reverse questions and answers\n        </label>\n      </div>\n    );\n  }\n\n}\n\nexport default DeckPicker;\n","const SCALE = 4; // each bucket is SCALE times as likely as the next\n\n//const log = console.log;\nconst log = () => {};\n\nconst Util = {\n\n  MAX_SCORE: 4,\n\n  // buckets: i -> [...] words in that bucket\n  // choose word randomly such that word in bucket n is SCALE times as likely as bucket n+1\n  pickFromBuckets: (buckets) => {\n    var sum = 0;\n    const weights = buckets.map((list, i)  => {\n      const weight = list.length * SCALE ** (buckets.length - i - 1);\n      sum += weight;\n      return weight;\n    });\n    var r = Math.random();\n    log('r:', r);\n    const index = weights.reduce((result, weight, index) => {\n      log('result=', result, ' weight=', weight, ' index=', index);\n      if (result === undefined) {\n        const p = weight / sum;\n        r -= p;\n        log('p=', p, ' r now=', r);\n        if (r < 0) {\n          result = index;\n        }\n      }\n      return result;\n    }, undefined);\n    const bucket = buckets[index];\n    const i = Math.floor(Math.random() * bucket.length);\n    log(`i=${i} word=${bucket[i]}`);\n    return bucket[i];\n  },\n\n  moveBucket: (buckets, value, from, to) => {\n    var result = [...buckets];\n    const fi = result[from].indexOf(value);\n    if (fi < 0) {\n      console.error(`ERROR: moveBucket: ${value} is not in bucket ${from}: ${result[from]}`);\n      return;\n    }\n    result[from].splice(fi, 1);\n    result[to].push(value);\n    return result;\n  },\n\n};\n\nexport default Util;\n","import React from 'react';\nimport Util from './Util.js';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nconst ScoreTable = ({ scores, questions }) => {\n  const rows = Array.from(Array(Util.MAX_SCORE+1)).map(() => []);\n  scores.map((s, i) => rows[s].push(questions[i]));\n  const overall = Math.floor(scores.reduce((result, s, index) => {\n    return result + Math.max(s - 1, 0);\n  }, 0) * 100 / 3 / questions.length + .5);\n  return (\n    <div id='ScoreTable'>\n      <ProgressBar\n        now={overall}\n        label={`${overall}%`}\n      />\n      <table>\n        <tbody>\n          {/*\n          <tr><td className='level' colSpan='2'>\n            Knowledge level: {Math.floor(overall + .5)}%\n          </td></tr>\n          */}\n          {\n            rows.reverse().map((row, i) => (\n                <tr key={i}>\n                  <td className='level'>Level&nbsp;{rows.length - 1 - i}:</td>\n                  <td>\n                  {\n                    row.map((word, j) => (\n                      <span key={j} className='nowrap'>{(j > 0 ? ', ' : '') + word}</span>\n                    ))\n                  }\n                  </td>\n                </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ScoreTable;\n","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nclass Flashcard extends Component {\n  state = {\n    showAnswer: false,\n  };\n\n  doEvaluation = (v) => {\n    this.setState({showAnswer: false});\n    this.props.doEvaluation(v);\n  };\n\n  render() {\n    const { question, answer } = this.props;\n    const evaluations = [\n      { delta: -1, variant: 'danger',  title: 'Not at all' },\n      { delta:  0, variant: 'warning', title: 'A little' },\n      { delta: +1, variant: 'success', title: 'Very well' },\n    ];\n\n    return (\n      <div id='Flashcard'>\n        <div>\n          <div className='language'>Domanda:</div>\n          <div className='word'>{question}</div>\n        </div>\n        <div>\n          <div className='language'>Riposta:</div>\n          <div className='word' hidden={!this.state.showAnswer}>\n            {answer}\n          </div>\n        </div>\n        <div className='evaluate'>\n          <div className='language' hidden={this.state.showAnswer}>\n          </div>\n          <div className='word' hidden={this.state.showAnswer}>\n            <Button\n              variant='primary'\n              onClick={() => { this.setState({showAnswer: true}) }}>\n              Show\n            </Button>\n          </div>\n          <div className='language' hidden={!this.state.showAnswer}>\n            <div className='smaller'>How well did you know it?</div>\n          </div>\n          <div className='word' hidden={!this.state.showAnswer}>\n            {evaluations.map((e) => (\n              <Button\n                key={e.delta}\n                variant={e.variant}\n                title={e.title}\n                onClick={() => { this.doEvaluation(e.delta); }}>\n                {e.delta > 0 ? \"+\" : e.delta < 0 ? \"-\" : \"0\"}\n              </Button>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Flashcard;\n","const Words = {\n  'Avere': [\n    'avere', 'to have',\n    '(avere) io', '(avere) ho',\n    '(avere) tu', '(avere) hai',\n    '(avere) lui/lei', '(avere) ha',\n    '(avere) noi', '(avere) abbiamo',\n    '(avere) voi', '(avere) avete',\n    '(avere) loro', '(avere) hanno',\n  ],\n  'Fare': [\n    'fare', 'to do/make',\n    '(fare) io', '(fare) faccio',\n    '(fare) tu', '(fare) fai',\n    '(fare) lui/lei', '(fare) fa',\n    '(fare) noi', '(fare) facciamo',\n    '(fare) voi', '(fare) fate',\n    '(fare) loro', '(fare) fanno',\n  ],\n  'Andare': [\n    'andare', 'to go',\n    '(andare) io', '(fare) vado',\n    '(andare) tu', '(fare) vai',\n    '(andare) lui/lei', '(fare) va',\n    '(andare) noi', '(fare) andiamo',\n    '(andare) voi', '(fare) andate',\n    '(andare) loro', '(fare) vanno',\n  ],\n  'Essere': [\n    'I am', 'io sono',\n    'you are', 'tu sei',\n    'he/she is', 'lui/lei è',\n    'we are', 'noi siamo',\n    'you all are', 'voi siete',\n    'they are', 'loro sono',\n  ],\n  'Volere': [\n    'I want', 'io voglio',\n    'you want', 'tu vuoi',\n    'he/she wants', 'lui/lei vuole',\n    'we want', 'noi vogliamo',\n    'you all want', 'voi volete',\n    'they want', 'loro vogliono',\n  ],\n  'Potere': [\n    'I can', 'io posso',\n    'you can', 'tu puoi',\n    'he/she can', 'lui/lei può',\n    'we can', 'noi possiamo',\n    'you all can', 'voi potete',\n    'they can', 'loro possono',\n  ],\n  'Dovere': [\n    'I must', 'io devo',\n    'you must', 'tu devi',\n    'he/she must', 'lui/lei deve',\n    'we must', 'noi dobbiamo',\n    'you call must', 'voi dovete',\n    'they must', 'loro devono',\n  ],\n  'Preposizioni': [\n    'to/at', 'a',\n    'of', 'di',\n    'from', 'da',\n    'in', 'in',\n    'on', 'su',\n    'with', 'con',\n    'for', 'per',\n  ],\n  'Numeri': [\n    'one', 'uno',\n    'two', 'due',\n    'three', 'tre',\n    'four', 'quattro',\n    'five', 'cinque',\n    'six', 'sei',\n    'seven', 'sette',\n    'eight', 'otto',\n    'nine', 'nove',\n    'ten', 'dieci',\n  ],\n  'Questions': [\n    'who', 'chi',\n    'what', 'cosa/che cosa',\n    'where', 'dove',\n    'when', 'quando',\n    'at what time', 'a che ora',\n    'why', 'perchè',\n    'how', 'come',\n    'how do you say this', 'come si dice questo',\n    'how many', 'quanti/quante',\n    'how much', 'quanto/quanta',\n    'how much time', 'quanto tempo',\n    'how far', 'quanto dista',\n    'which', 'quale/quali',\n  ],\n  'Verbs: -are': [\n    'to arrive', 'arrivare',\n    'to buy', 'comprare',\n    'to come back', 'tornare',\n    'to cook', 'cucinare',\n    'to eat', 'mangiare',\n    'to enter', 'entrare',\n    'to give', 'dare',\n    'to go', 'andare',\n    'to invite', 'invitare',\n    'to learn', 'imparare',\n    'to listen', 'ascoltare',\n    'to pay', 'pagare',\n    'to speak', 'parlare',\n    'to start', 'cominciare',\n    'to start', 'iniziare',\n    'to study', 'studiare',\n    'to think', 'pensare',\n    'to wash', 'lavare',\n    'to work', 'lavorare',\n  ],\n  'Verbs: -ere': [\n    'must (modal verb)', 'dovere',\n    'to ask', 'chiedere',\n    'to be able/can (modal verb)', 'potere',\n    'to be born', 'nascere',\n    'to believe', 'credere',\n    'to drink', 'bere',\n    'to know (information)', 'sapere',\n    'to know (sb/smth)', 'conoscere',\n    'to live', 'vivere',\n    'to read', 'leggere',\n    'to run', 'correre',\n    'to see', 'vedere',\n    'to write', 'scrivere',\n  ],\n  'Verbs: -ire': [\n    'to come', 'venire',\n    'to die', 'morire',\n    'to finish', 'finire',\n    'to go out', 'uscire',\n    'to leave', 'partire',\n    'to open', 'aprire',\n    'to say', 'dire',\n    'to sleep', 'dormire',\n    'to understand', 'capire',\n  ],\n};\nexport default Words;\n","import React, { Component } from 'react';\nimport DeckPicker from './DeckPicker';\nimport ScoreTable from './ScoreTable';\nimport Flashcard from './Flashcard';\nimport Words from '../data/words.js';\nimport Util from './Util.js';\n\n// Start at 1 so room to go down.\nconst START_SCORE = 1;\n\nclass Flashcards extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      haveBegun: false,\n      questions: [],  // i -> question in lang1\n      answers:   [],  // i -> answer in lang2\n      scores:    [],  // i -> score for that pair\n      buckets:   [],  // score -> [ indices with that score ]\n    };\n  }\n\n  doEvaluation = (delta) => {\n    let scores = [...this.state.scores];\n    const oldScore = scores[this.state.currentWord];\n    const newScore = Math.max(0, Math.min(Util.MAX_SCORE, oldScore + delta));\n    scores[this.state.currentWord] = newScore;\n    const buckets = Util.moveBucket(\n      this.state.buckets, this.state.currentWord, oldScore, newScore);\n    this.setState({\n      currentWord: this.pickFromBuckets(buckets),\n      scores:      scores,\n      buckets:     buckets,\n    });\n  };\n\n  // Don't pick the same word twice in a row\n  pickFromBuckets = (buckets) => {\n    for (;;) {\n      const word = Util.pickFromBuckets(buckets);\n      if (word !== this.state.currentWord) return word;\n    }\n  };\n\n  doBegin = (decks, reverse) => {\n    const d1 = reverse ? 1 : 0;\n    const d2 = reverse ? 0 : 1;\n    var questions = [];\n    var answers = [];\n    var scores = [];\n    var buckets = Array.from(Array(Util.MAX_SCORE+1)).map(() => []);\n    for (var j = 0; j < decks.length; ++j) {\n      const list = Words[decks[j]];\n      for (var i = 0; i < list.length; i += 2) {\n        buckets[START_SCORE].push(questions.length);\n        questions.push(list[i+d1]);\n        answers.push(list[i+d2]);\n        scores.push(START_SCORE);\n      }\n    }\n    this.setState({\n      haveBegun:   true,\n      decks:       decks,\n      questions:   questions,\n      answers:     answers,\n      scores:      scores,\n      buckets:     buckets,\n      currentWord: Util.pickFromBuckets(buckets),\n    });\n  }\n\n  render() {\n    if (!this.state.haveBegun) {\n      return (\n        <DeckPicker words={Words} doBegin={this.doBegin} />\n      );\n    } else {\n      const question = this.state.questions[this.state.currentWord];\n      const answer = this.state.answers[this.state.currentWord];\n      return (\n        <>\n          <Flashcard\n            question={question}\n            answer={answer}\n            doEvaluation={this.doEvaluation}\n          />\n          <ScoreTable\n            scores={this.state.scores}\n            questions={this.state.questions}\n          />\n        </>\n      );\n    }\n  }\n}\n\nexport default Flashcards;\n","import React, { Component } from 'react';\n//import { HashRouter, Router, Routes, Route, Link } from \"react-router-dom\";\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Flashcards from './Flashcards';\n\nclass App extends Component {\n  render() {\n    return (\n      <Flashcards />\n    );\n    //return (\n    //  <HashRouter>\n    //    <Switch>\n    //      <Route exact path=\"/\" component={Home} />} />\n    //      <Route path=\"/about\" component={About} />\n    //      <Route\n    //        render={props => <NotFoundPage {...props} />}\n    //      />\n    //    </Switch>\n    //  </HashRouter>\n    //);\n  }\n}\n      //<HashRouter basename=\"/\">\n      //  <div>\n      //    <ul>\n      //      <li><Link to=\"/\">Home</Link></li>\n      //      <li><Link to=\"/about\">About</Link></li>\n      //    </ul>\n      //    <hr />\n      //    <Routes>\n      //      <Route exact path=\"/\" component={Home} />\n      //      <Route path=\"/about\" component={About} />\n      //    </Routes>\n      //  </div>\n      //</HashRouter>\n\nconst Home = () => <div><h2>Home</h2></div>\nconst About = () => <div><h2>About</h2></div>\n\nconst NotFoundPage = () => <div>Not found</div>\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}