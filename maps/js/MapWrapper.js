// Generated by CoffeeScript 1.10.0
var MapWrapper;

MapWrapper = (function() {
  function MapWrapper(elem) {
    this.map = new google.maps.Map(elem, {
      mapTypeId: google.maps.MapTypeId.TERRAIN
    });
    this.ne = {
      lng: -180,
      lat: -90
    };
    this.sw = {
      lng: 180,
      lat: 90
    };
    this.legend = [];
    this.counter = new CallbackCounter(1, (function(_this) {
      return function() {
        return _this._finish();
      };
    })(this));
    this.title = '';
  }

  MapWrapper.prototype.getBounds = function() {
    return {
      ne: this.ne,
      sw: this.sw
    };
  };

  MapWrapper.prototype.done = function() {
    return this.counter.decr();
  };

  MapWrapper.prototype._finish = function() {
    var elem, i, len, ref, span, x;
    this.map.fitBounds(new google.maps.LatLngBounds(this.sw, this.ne));
    if (this.title === '') {
      ref = this.legend;
      for (i = 0, len = ref.length; i < len; i++) {
        x = ref[i];
        span = "<span class='hline' style='background-color: " + x.color + "'></span>";
        this.title += "<div>" + span + " " + x.date + " " + x.name + "</div>";
      }
    }
    elem = $("<div id='title'>" + this.title + "</div>");
    return this.map.controls[google.maps.ControlPosition.TOP_CENTER].push(elem[0]);
  };

  MapWrapper.prototype.getAndAddPath = function(color, url) {
    this.counter.incr();
    return $.ajax({
      url: url,
      type: 'GET',
      success: (function(_this) {
        return function(data) {
          return _this.addPath(color, data);
        };
      })(this),
      error: function(error) {
        return console.log('error', error);
      }
    });
  };

  MapWrapper.prototype.addPath = function(color, data) {
    var end, i, lat, len, lng, path, point, polyline, start;
    this.legend.push({
      name: data.name,
      date: data.date,
      color: color
    });
    path = data.coords;
    if ((path == null) || path.length === 0) {
      console.log('Bad data: missing "coords" property:', data);
      return;
    }
    start = path[0];
    end = path[path.length - 1];
    start = new google.maps.Marker({
      map: this.map,
      position: start,
      title: 'Start'
    });
    end = new google.maps.Marker({
      map: this.map,
      position: end,
      title: 'End'
    });
    polyline = new google.maps.Polyline({
      path: path,
      geodesic: true,
      strokeColor: color,
      strokeOpacity: 1.0,
      strokeWeight: 2
    });
    polyline.setMap(this.map);
    for (i = 0, len = path.length; i < len; i++) {
      point = path[i];
      lat = point.lat, lng = point.lng;
      if (lat < this.sw.lat) {
        this.sw.lat = lat;
      }
      if (lat > this.ne.lat) {
        this.ne.lat = lat;
      }
      if (lng < this.sw.lng) {
        this.sw.lng = lng;
      }
      if (lng > this.ne.lng) {
        this.ne.lng = lng;
      }
    }
    return this.counter.decr();
  };

  return MapWrapper;

})();
