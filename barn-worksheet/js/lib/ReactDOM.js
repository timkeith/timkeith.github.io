// Generated by CoffeeScript 1.10.0
var React, ReactDOM, _, btn, fn, isReactElement, name, ref, value,
  slice = [].slice;

React = require('react');

_ = require('underscore');

ReactDOM = {};

ref = React.DOM;
fn = function(name) {
  return ReactDOM[name] = function() {
    var args, attrs, children;
    attrs = arguments[0], children = 2 <= arguments.length ? slice.call(arguments, 1) : [];
    args = [attrs].concat(children);
    if (isReactElement(attrs) || _.isArray(attrs) || !_.isObject(attrs)) {
      args = [null].concat(args);
    } else {
      if (attrs["class"] != null) {
        attrs.className = attrs["class"];
        delete attrs["class"];
      }
      if (attrs["for"] != null) {
        attrs.htmlFor = attrs["for"];
        delete attrs["for"];
      }
    }
    return React.createElement.apply(null, [name].concat(args));
  };
};
for (name in ref) {
  value = ref[name];
  fn(name);
}

isReactElement = function(obj) {
  if (typeof obj !== 'object' || obj === null) {
    return false;
  }
  return obj.$$typeof !== void 0 && (obj._store != null) && obj.key !== void 0 && obj.props !== void 0 && (obj.type != null);
};

btn = function(attrs, child) {
  if ((attrs != null ? attrs.__proto__._isReactElement : void 0) || _.isArray(attrs) || !_.isObject(attrs)) {
    child = attrs;
    attrs = {};
  }
  if (attrs["class"] != null) {
    attrs["class"] += ' btn';
  } else {
    attrs["class"] = 'btn';
  }
  return ReactDOM.button(attrs, child);
};

module.exports = ReactDOM;
